[{"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\index.js":"1","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\App\\index.js":"3","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\firebase\\index.js":"4","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Dashboard\\dashboard.js":"5","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Login\\index.js":"6","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\action\\index.js":"7","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\store\\index.js":"8","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\reducer\\index.js":"9","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\index.js":"10","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\DataSiswa\\index.js":"11","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalAdd.js":"12","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Absensi\\index.js":"13","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalEdit.js":"14","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalHapus.js":"15","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalExport.js":"16"},{"size":590,"mtime":1612168871592,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":742,"mtime":1612787178923,"results":"20","hashOfConfig":"18"},{"size":678,"mtime":1614478730925,"results":"21","hashOfConfig":"18"},{"size":4055,"mtime":1614414052672,"results":"22","hashOfConfig":"18"},{"size":2500,"mtime":1614316215839,"results":"23","hashOfConfig":"18"},{"size":7098,"mtime":1614775963755,"results":"24","hashOfConfig":"18"},{"size":195,"mtime":1611996375716,"results":"25","hashOfConfig":"18"},{"size":1402,"mtime":1614413700925,"results":"26","hashOfConfig":"18"},{"size":24,"mtime":1611995769312,"results":"27","hashOfConfig":"18"},{"size":12951,"mtime":1614478782408,"results":"28","hashOfConfig":"18"},{"size":5596,"mtime":1614329972749,"results":"29","hashOfConfig":"18"},{"size":9673,"mtime":1614603216075,"results":"30","hashOfConfig":"18"},{"size":4684,"mtime":1614332014620,"results":"31","hashOfConfig":"18"},{"size":816,"mtime":1614345144953,"results":"32","hashOfConfig":"18"},{"size":3490,"mtime":1614775696994,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"aczlzt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\index.js",[],["73","74"],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\App\\index.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\firebase\\index.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Dashboard\\dashboard.js",["75","76"],"import React, { Component, Fragment } from 'react';\r\nimport './dashboard.css';\r\nimport { Navbar, Nav, Button, Col, Row, Card, Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, getJumlahSiswa, getJumlahAbsen } from '../../../config/redux/action';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        jumlah: '',\r\n        jumlahabsen: '',\r\n    }\r\n    handleLogout = () => {\r\n        const { logout, history } = this.props;\r\n        logout();\r\n        history.push('/')\r\n    }\r\n    componentDidMount() {\r\n        this.props.jumsis();\r\n        this.props.jumab();\r\n        const { jumlahsis, jumlahab } = this.props;\r\n        this.setState({\r\n            jumlah: jumlahsis,\r\n            jumlahabsen: jumlahab\r\n        })\r\n    }\r\n    render() {\r\n        const { jumlahsis, jumlahab } = this.props;\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-4\" sticky=\"top\">\r\n                    <Navbar.Brand>\r\n                        <img className=\"mb-1 float-left\" src=\"/images/logosmk.png\" width=\"48\" height=\"45\" />\r\n                    </Navbar.Brand>\r\n                    <Nav activeKey=\"/dashboard\">\r\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n                        <Nav.Link href=\"/datasiswa\">Data Siswa</Nav.Link>\r\n                        <Nav.Link href=\"/absensi\">Data Absensi</Nav.Link>\r\n                    </Nav>\r\n                    <Button className=\"ml-auto\" variant=\"danger\" onClick={this.handleLogout}>Logout</Button>\r\n                </Navbar>\r\n\r\n                <Container className=\"pl-5 pt-5 pr-5\">\r\n                    <Card className=\"ml-5 mr-5 kotak\">\r\n                        <Card.Title className=\"text-center font-weight-bold mb-3\">Halo Admin! </Card.Title>\r\n                        <Card.Text>\r\n                            <Row className=\"mt-5 mb-3\">\r\n                                <Col lg={6}>\r\n                                    <Card className=\"kotak2\">\r\n                                        <Card.Title className=\"text-center font-weight-bold\">\r\n                                            Jumlah Data Siswa\r\n                                        </Card.Title>\r\n                                        <Card.Text className=\"font-weight-bold text-center mt-5\">\r\n                                            <h1 className=\"mb-4\"> {jumlahsis} </h1>\r\n                                            <Button href=\"/datasiswa\" className=\"mt-5 mb-3\" variant=\"primary\">Lihat Data</Button>\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <Card className=\"kotak2\">\r\n                                        <Card.Title className=\"text-center font-weight-bold\">\r\n                                            Jumlah Data Absensi\r\n                                        </Card.Title>\r\n                                        <Card.Text className=\"font-weight-bold text-center mt-5\">\r\n                                            <h1 className=\"mb-4\"> {jumlahab} </h1>\r\n                                            <Button href=\"/absensi\" className=\"mt-5 mb-3\" variant=\"primary\">Lihat Data</Button>\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Text>\r\n                    </Card>\r\n                </Container>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    userData: state.user,\r\n    jumlahsis: state.jumlahsiswa,\r\n    jumlahab: state.jumlahabsen\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    logout: (data) => dispatch(logoutUser(data)),\r\n    jumsis: (data) => dispatch(getJumlahSiswa(data)),\r\n    jumab: (data) => dispatch(getJumlahAbsen(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Login\\index.js",["77","78"],"import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './login.css';\r\nimport { loginUserAPI } from '../../../config/redux/action';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleLoginSubmit = async () => {\r\n        const {email, password} = this.state;\r\n        const {history} = this.props;\r\n        const res = await this.props.loginAPI({email, password}).catch(err => err);\r\n        if (res) {\r\n            console.log('login success', res);\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n            })\r\n            history.push('/dashboard')\r\n        }else{\r\n            alert('Login Gagal!')\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"\">\r\n                <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                    <Navbar.Brand>\r\n                        <img className=\"mb-1 float-left\" src=\"/images/logosmk.png\" width=\"48\" height=\"45\" />\r\n                    </Navbar.Brand>\r\n                    <Nav activeKey=\"/\">\r\n                        <Nav.Link href=\"/\">Sistem Presensi Peserta Didik</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"card border-primary w-25 text-center tengah\">\r\n                    <div className=\"card-body\">\r\n                            <img className=\"mb-1\" src=\"/images/logosmk.png\" width=\"110\"></img>\r\n                            <h3 className=\"mb-3\">Login</h3>\r\n                            <input id=\"email\" className=\"form-control mb-1\" type=\"email\" placeholder=\"email\" onChange={this.handleChangeText} value={this.state.email}/>\r\n                            <input id=\"password\" className=\"form-control\" type=\"password\" placeholder=\"password\" onChange={this.handleChangeText} value={this.state.password}/>\r\n                            <button onClick={this.handleLoginSubmit} className=\"btn btn-primary mt-3\">Login</button>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    isLoading: state.isLoading\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    loginAPI: (data) => dispatch(loginUserAPI(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Login);","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\action\\index.js",["79","80","81"],"import firebase, { database } from '../../firebase';\r\n\r\nexport const loginUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({ type: 'CHANGE_LOADING', value: true })\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n            .then(res => {\r\n                console.log('success: ', res)\r\n                const dataUser = {\r\n                    email: res.user.email,\r\n                    uid: res.user.uid\r\n                }\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: true })\r\n                dispatch({ type: 'CHANGE_USER', value: dataUser })\r\n                resolve(dataUser)\r\n            })\r\n            .catch(function (error) {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorCode, errorMessage)\r\n                dispatch({ type: 'CHANGE_LOADING', value: false })\r\n                dispatch({ type: 'CHANGE_ISLOGIN', value: false })\r\n                reject(false)\r\n            })\r\n    })\r\n}\r\n\r\nexport const logoutUser = (data) => (dispatch) => {\r\n    firebase.auth().signOut().then(() => {\r\n        console.log(\"berhasil logout\");\r\n        dispatch({ type: 'CHANGE_ISLOGIN', value: false })\r\n    }).catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode, errorMessage)\r\n        console.log(\"gagal logout\");\r\n        dispatch({ type: 'CHANGE_ISLOGIN', value: true })\r\n    });\r\n}\r\n\r\nexport const addDataSiswa = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        database.ref('datasiswa/' + data.nis).set({\r\n            nis: data.nis,\r\n            nama: data.nama,\r\n            tempat: data.tempat,\r\n            tanggal: data.tanggal,\r\n            alamat: data.alamat,\r\n            tingkat: data.tingkat,\r\n            rombel: data.rombel,\r\n            jurusan: data.jurusan,\r\n            kelas: data.tingkat + data.jurusan + data.rombel,\r\n            kelas_tanggal: data.tingkat + data.jurusan + data.rombel+data.tanggal\r\n        })\r\n    })\r\n}\r\nexport const addDataUser = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        database.ref('user/' + data.nis).set({\r\n            nis: data.nis,\r\n            nama: data.nama,\r\n            kelas: data.tingkat + data.jurusan + data.rombel,\r\n            password: data.password\r\n        })\r\n    })\r\n}\r\n\r\nexport const getDataSiswa = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('datasiswa/');\r\n    return new Promise((resolve, reject) => {\r\n        urlSiswa.on('value', function (snapshot) {\r\n            console.log('getData: ', snapshot.val());\r\n            const datas = [];\r\n            Object.keys(snapshot.val()).map(key => {\r\n                datas.push({\r\n                    id: key,\r\n                    datas: snapshot.val()[key]\r\n                })\r\n            });\r\n            dispatch({ type: 'SET_DATA', value: datas });\r\n            resolve(snapshot.val())\r\n        });\r\n    })\r\n}\r\n\r\nexport const getJumlahSiswa = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('datasiswa/');\r\n    urlSiswa.once(\"value\")\r\n            .then(function(snapshot) {\r\n                const jumlah = snapshot.numChildren();\r\n                dispatch({type: 'SET_JUMSIS', value: jumlah});\r\n                console.log('jumsis: ', jumlah);\r\n            });\r\n            \r\n}\r\nexport const getJumlahAbsen = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('uploads/');\r\n    urlSiswa.once(\"value\")\r\n            .then(function(snapshot) {\r\n                const jumlahab = snapshot.numChildren();\r\n                dispatch({type: 'SET_JUMAB', value: jumlahab});\r\n                console.log('jumab: ', jumlahab);\r\n            });\r\n            \r\n}\r\n\r\nexport const getDataUser = (data) => (dispatch) => {\r\n    const urlUser = database.ref('user/').orderByChild('kelas').equalTo(data.ustingkat+data.usjurusan+data.usrombel);\r\n    return new Promise((resolve, reject) => {\r\n        urlUser.on('value', function (snapshot) {\r\n            console.log('getUser: ', snapshot.val());\r\n\r\n            const datausers = [];\r\n            Object.keys(snapshot.val()).map(key => {\r\n                datausers.push({\r\n                    id: key,\r\n                    datausers: snapshot.val()[key]\r\n                })\r\n            });\r\n            dispatch({ type: 'SET_USER', value: datausers });\r\n            resolve(snapshot.val())\r\n        });\r\n    })\r\n}\r\n\r\nexport const getDataAbsen = (data) => (dispatch) => {\r\n    const urlAbsen = database.ref('uploads/').orderByChild('waktu')\r\n    .startAt(data.dateStart)\r\n    .endAt(data.dateEnd+\" \"+data.timeEnd);\r\n    return new Promise((resolve, reject) => {\r\n        urlAbsen.on('value', function (snapshot) {\r\n            const jumlah = snapshot.numChildren();\r\n            const dataabs = [];\r\n            Object.keys(snapshot.val()).map(key => {\r\n                dataabs.push({\r\n                    id: key,\r\n                    dataabs: snapshot.val()[key]\r\n                })\r\n            });\r\n            console.log('dataabs: ', dataabs);\r\n            console.log('count: '+jumlah);\r\n            dispatch({ type: 'SET_ABSENKELAS', value: dataabs });\r\n            resolve(snapshot.val())\r\n\r\n        });\r\n    })\r\n}\r\n\r\nexport const updateDataSiswa = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('datasiswa/' + data.siswaId);\r\n    return new Promise((resolve, reject) => {\r\n        urlSiswa.update({\r\n            nis: data.nis,\r\n            nama: data.nama,\r\n            tempat: data.tempat,\r\n            tanggal: data.tanggal,\r\n            alamat: data.alamat,\r\n            tingkat: data.tingkat,\r\n            rombel: data.rombel,\r\n            jurusan: data.jurusan,\r\n            kelas: data.tingkat + data.jurusan + data.rombel,\r\n            kelas_tanggal: data.tingkat + data.jurusan + data.rombel+\"_\"+data.tanggal\r\n        }, (err) => {\r\n            if (err) {\r\n                reject(false);\r\n            } else {\r\n                resolve(true)\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nexport const updateDataUser = (data) => (dispatch) => {\r\n    const urlUser = database.ref('user/' + data.siswaId);\r\n    return new Promise((resolve, reject) => {\r\n        urlUser.update({\r\n            nis: data.nis,\r\n            nama: data.nama,\r\n            kelas: data.tingkat + data.jurusan + data.rombel\r\n        }, (err) => {\r\n            if (err) {\r\n                reject(false);\r\n            } else {\r\n                resolve(true)\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nexport const deleteDataSiswa = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('datasiswa/' + data.siswaId);\r\n    return new Promise((resolve, reject) => {\r\n        urlSiswa.remove();\r\n    })\r\n}\r\n\r\nexport const deleteDataUser = (data) => (dispatch) => {\r\n    const urlSiswa = database.ref('user/' + data.siswaId);\r\n    return new Promise((resolve, reject) => {\r\n        urlSiswa.remove();\r\n    })\r\n}\r\n\r\n","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\store\\index.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\reducer\\index.js",[],["82","83"],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\config\\redux\\index.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\DataSiswa\\index.js",["84","85"],"import React, { Component, Fragment } from \"react\";\r\nimport { Container, Row, Col, Button, Navbar, Nav, Table } from \"react-bootstrap\";\r\nimport { ModalAdd } from \"../../../components/molecules/ModalAdd\";\r\nimport { ModalEdit } from \"../../../components/molecules/ModalEdit\";\r\nimport { connect } from \"react-redux\";\r\nimport XLSX from 'xlsx';\r\nimport {\r\n    addDataSiswa, getDataSiswa, updateDataSiswa,\r\n    deleteDataSiswa, addDataUser, updateDataUser, deleteDataUser, getDataUser\r\n} from \"../../../config/redux/action\";\r\nimport { ModalHapus } from \"../../../components/molecules/ModalHapus\";\r\nimport { ModalExport } from \"../../../components/molecules/ModalExport\";\r\n\r\nclass DataSiswa extends Component {\r\n    state = {\r\n        showModal: false,\r\n        openModal: false,\r\n        bukaModal: false,\r\n        modalEx: false,\r\n        dataSiswa: {\r\n            nis: '',\r\n            nama: '',\r\n            tempat: '',\r\n            tanggal: '',\r\n            alamat: '',\r\n            tingkat: '',\r\n            rombel: '',\r\n            jurusan: '',\r\n        },\r\n        siswaId: '',\r\n        password: '',\r\n        users: [],\r\n        ustingkat: '',\r\n        usrombel: '',\r\n        usjurusan: '',\r\n    }\r\n    componentDidMount() {\r\n        this.props.getData();\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            openModal: false,\r\n            bukaModal: false,\r\n            modalEx: false,\r\n            dataSiswa: {\r\n                nis: '',\r\n                nama: '',\r\n                tempat: '',\r\n                tanggal: '',\r\n                alamat: '',\r\n                tingkat: '',\r\n                rombel: '',\r\n                jurusan: '',\r\n            },\r\n            password: '',\r\n        })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    }\r\n    showEdit = (siswa) => {\r\n        this.setState({\r\n            openModal: true,\r\n            nis: siswa.datas.nis,\r\n            nama: siswa.datas.nama,\r\n            tempat: siswa.datas.tempat,\r\n            tanggal: siswa.datas.tanggal,\r\n            alamat: siswa.datas.alamat,\r\n            tingkat: siswa.datas.tingkat,\r\n            rombel: siswa.datas.rombel,\r\n            jurusan: siswa.datas.jurusan,\r\n            jenkel: siswa.datas.jenkel,\r\n            siswaId: siswa.id\r\n\r\n        })\r\n    }\r\n    showConfirm = (siswa) => {\r\n        this.setState({\r\n            bukaModal: true,\r\n            siswaId: siswa.datas.nis,\r\n        })\r\n    }\r\n    handleSaveData = async () => {\r\n        const { nis, nama, tempat, tanggal, alamat, rombel, tingkat, jurusan, password } = this.state;\r\n        const { saveData, saveUser } = this.props;\r\n        this.handleClose();\r\n        const data = {\r\n            nis: nis,\r\n            nama: nama,\r\n            tempat: tempat,\r\n            tanggal: tanggal,\r\n            alamat: alamat,\r\n            tingkat: tingkat,\r\n            rombel: rombel,\r\n            jurusan: jurusan,\r\n            password: password\r\n        }\r\n        const res = await (saveData(data), saveUser(data)).catch(err => err);\r\n        if (res) {\r\n            alert('input success');\r\n            this.setState({\r\n                nis: '',\r\n                nama: '',\r\n                tempat: '',\r\n                tanggal: '',\r\n                alamat: '',\r\n                tingkat: '',\r\n                rombel: '',\r\n                jurusan: '',\r\n            })\r\n        } else {\r\n            console.log('input failed');\r\n        }\r\n\r\n    }\r\n    handleChangeText = (e, type) => {\r\n        this.setState({\r\n            [type]: e.target.value,\r\n        })\r\n    }\r\n    handleChangePassword = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n    }\r\n    handleOptionChange = (e) => {\r\n        this.setState({\r\n            jenkel: e.target.value\r\n        })\r\n    }\r\n    handleChangeSelect = (e, type) => {\r\n        this.setState({\r\n            [type]: e.target.value,\r\n        })\r\n    }\r\n    updateSiswa = () => {\r\n        const { nis, nama, tempat, tanggal, alamat, rombel, tingkat, jurusan, siswaId } = this.state;\r\n        const { updateData, updateUser } = this.props;\r\n        this.handleClose();\r\n        const data = {\r\n            nis: nis,\r\n            nama: nama,\r\n            tempat: tempat,\r\n            tanggal: tanggal,\r\n            alamat: alamat,\r\n            tingkat: tingkat,\r\n            rombel: rombel,\r\n            jurusan: jurusan,\r\n        }\r\n        data.siswaId = siswaId;\r\n        updateData(data);\r\n        updateUser(data);\r\n        alert('Data berhasil diubah')\r\n    }\r\n    deleteSiswa = () => {\r\n        const { deleteData, deleteUser } = this.props;\r\n        const {siswaId} = this.state;\r\n        const data = {\r\n            siswaId: siswaId\r\n        }\r\n        deleteData(data);\r\n        deleteUser(data);\r\n        this.handleClose();\r\n        alert('Data dihapus!');\r\n    }\r\n    showmodalEx = () => {\r\n        this.setState({\r\n            modalEx: true,\r\n        })\r\n    }\r\n    handleExport = async () => {\r\n        const { ustingkat, usjurusan, usrombel } = this.state;\r\n        const { getUser, datauser } = this.props;\r\n        const data = {\r\n            ustingkat: ustingkat,\r\n            usrombel: usrombel,\r\n            usjurusan: usjurusan,\r\n        }\r\n        const res = await (getUser(data)).catch(err => err);\r\n        if (res) {\r\n            this.setState({\r\n                ustingkat: '',\r\n                usrombel: '',\r\n                usjurusan: '',\r\n            })\r\n            alert('Data didapatkan, silahkan export')\r\n        } else {\r\n\r\n        }\r\n    }\r\n    exportFile(datauser) {\r\n        let users = [[\"NIS\", \"Nama\", \"Username\", \"Password\"]]\r\n        let kelas = '';\r\n        datauser.forEach((user) => {\r\n            let userArray = [user.datausers.nis, user.datausers.nama, user.datausers.nis, user.datausers.password]\r\n            kelas = user.datausers.kelas;\r\n            users.push(userArray)\r\n\r\n        })\r\n        const wb = XLSX.utils.book_new()\r\n        const wsAll = XLSX.utils.aoa_to_sheet(users)\r\n\r\n        XLSX.utils.book_append_sheet(wb, wsAll, kelas+\" Users\")\r\n        XLSX.writeFile(wb, \"data-user-\" + kelas + \".xlsx\")\r\n        this.handleClose();\r\n    }\r\n    render() {\r\n        const { datasiswa, datauser } = this.props;\r\n        console.log('datasiswa: ', datasiswa);\r\n        console.log('datauser: ', datauser);\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-4\" sticky=\"top\">\r\n                    <Navbar.Brand>\r\n                        <img className=\"mb-1 float-left\" src=\"/images/logosmk.png\" width=\"48\" height=\"45\" />\r\n                    </Navbar.Brand>\r\n                    <Nav activeKey=\"/datasiswa\">\r\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n                        <Nav.Link href=\"/datasiswa\">Data Siswa</Nav.Link>\r\n                        <Nav.Link href=\"/absensi\">Data Absensi</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={12}>\r\n                            <p className=\"text-center font-weight-bold\">Data Siswa</p>\r\n                            <Row>\r\n\r\n                                <Col lg={6}>\r\n                                    <Button onClick={this.showmodalEx}>Export User</Button>\r\n                                    <ModalExport\r\n                                        handleChangeSelect={this.handleChangeSelect}\r\n                                        handleClose={this.handleClose}\r\n                                        handleExport={this.handleExport}\r\n                                        exportFile={() => this.exportFile(datauser)}\r\n                                        {...this.state} />\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <Button className=\"btn-success float-right\" onClick={this.handleShow}>Tambah Data</Button>\r\n                                    <ModalAdd\r\n                                        handleSaveData={this.handleSaveData}\r\n                                        handleChangeText={this.handleChangeText}\r\n                                        handleClose={this.handleClose}\r\n                                        handleChangeSelect={this.handleChangeSelect}\r\n                                        handleOptionChange={this.handleOptionChange}\r\n                                        handleChangePassword={this.handleChangePassword}\r\n                                        {...this.state} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Table striped bordered hover className=\"mt-4\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th>NIS</th>\r\n                                        <th>Kelas</th>\r\n                                        <th>Nama</th>\r\n                                        <th>TTL</th>\r\n                                        <th>Alamat</th>\r\n                                        <th>Alat</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        datasiswa.length > 0 ? (\r\n                                            <Fragment>\r\n                                                {\r\n                                                    datasiswa.map((siswa) => (\r\n\r\n                                                        <tr key={siswa.id}>\r\n                                                            <td>{siswa.datas.nis}</td>\r\n                                                            <td>{siswa.datas.tingkat + ' ' + siswa.datas.jurusan + ' ' + siswa.datas.rombel}</td>\r\n                                                            <td>{siswa.datas.nama}</td>\r\n                                                            <td>{siswa.datas.tempat + ', ' + siswa.datas.tanggal}</td>\r\n                                                            <td>{siswa.datas.alamat}</td>\r\n                                                            <td>\r\n                                                                <Button onClick={() => this.showEdit(siswa)}>Edit</Button> &nbsp;\r\n                                                                    <ModalEdit\r\n                                                                    updateSiswa={this.updateSiswa}\r\n                                                                    handleChangeText={this.handleChangeText}\r\n                                                                    handleClose={this.handleClose}\r\n                                                                    handleChangeSelect={this.handleChangeSelect}\r\n                                                                    handleOptionChange={this.handleOptionChange}\r\n                                                                    {...this.state} />\r\n                                                                <Button variant=\"danger\" onClick={() => this.showConfirm(siswa)}>Hapus</Button>\r\n                                                                <ModalHapus\r\n                                                                    deleteSiswa={this.deleteSiswa}\r\n                                                                    handleClose={this.handleClose}\r\n                                                                    {...this.state} />\r\n                                                            </td>\r\n                                                        </tr>\r\n\r\n                                                    ))\r\n                                                }\r\n                                            </Fragment>\r\n                                        ) : null\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    userData: state.user,\r\n    datasiswa: state.datasiswa,\r\n    datauser: state.datauser,\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    saveData: (data) => dispatch(addDataSiswa(data)),\r\n    saveUser: (data) => dispatch(addDataUser(data)),\r\n    getData: (data) => dispatch(getDataSiswa(data)),\r\n    getUser: (data) => dispatch(getDataUser(data)),\r\n    updateData: (data) => dispatch(updateDataSiswa(data)),\r\n    updateUser: (data) => dispatch(updateDataUser(data)),\r\n    deleteData: (data) => dispatch(deleteDataSiswa(data)),\r\n    deleteUser: (data) => dispatch(deleteDataUser(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(DataSiswa);","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalAdd.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\containers\\pages\\Absensi\\index.js",["86","87"],"import React, { Component, Fragment } from \"react\";\r\nimport { Navbar, Nav, Container, Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataAbsen } from \"../../../config/redux/action\";\r\nimport Moment from 'moment';\r\nimport XLSX from 'xlsx';\r\n\r\nclass Absensi extends Component {\r\n    state = {\r\n        tingkat: '',\r\n        rombel: '',\r\n        jurusan: '',\r\n        dateStart: Moment(\"\").format('YYYY-MM-DD'),\r\n        dateEnd: Moment(\"\").format('YYYY-MM-DD'),\r\n        absens: [],\r\n        timeStart: '',\r\n        timeEnd: ''\r\n    }\r\n    handleChangeSelect = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleCariKelas = () => {\r\n        const { tingkat, rombel, jurusan, dateStart, dateEnd } = this.state;\r\n        const { getAbsen } = this.props;\r\n        const data = {\r\n            tingkat: tingkat,\r\n            rombel: rombel,\r\n            jurusan: jurusan,\r\n            dateStart: dateStart,\r\n            dateEnd: dateEnd,\r\n            timeStart: '00:00:00',\r\n            timeEnds: '23:59:59'\r\n        }\r\n        getAbsen(data);\r\n        localStorage.setItem('data', getAbsen(data));\r\n    }\r\n    handleCariTanggal = () => {\r\n        const { tingkat, rombel, jurusan, dateStart, dateEnd } = this.state;\r\n        const { getAbsen } = this.props;\r\n        const data = {\r\n            tingkat: tingkat,\r\n            rombel: rombel,\r\n            jurusan: jurusan,\r\n            dateStart: Moment(dateStart).format('DD/MM/YYYY'),\r\n            dateEnd: Moment(dateEnd).format('DD/MM/YYYY'),\r\n            timeStart: '00:00:00',\r\n            timeEnds: '23:59:59'\r\n        }\r\n        getAbsen(data);\r\n        localStorage.setItem('data', getAbsen(data));\r\n    }\r\n    exportFile(dataabsen) {\r\n        let absens = [[\"NIS\", \"Nama\", \"Tanggal\", \"Keterangan\"]]\r\n        let kelas = '';\r\n        dataabsen.forEach((absen) => {\r\n            let absenArray = [absen.dataabs.nis, absen.dataabs.nama, absen.dataabs.waktu, absen.dataabs.name]\r\n            kelas = absen.dataabs.kelas;\r\n            console.log(\"datarekap: \", absenArray);\r\n            absens.push(absenArray)\r\n        })\r\n        const wb = XLSX.utils.book_new()\r\n        const wsAll = XLSX.utils.aoa_to_sheet(absens)\r\n\r\n        XLSX.utils.book_append_sheet(wb, wsAll, \"Presensi \" + kelas)\r\n        XLSX.writeFile(wb, \"data-absensi-\" + kelas + \".xlsx\")\r\n    }\r\n\r\n    render() {\r\n        const { dataabsen } = this.props;\r\n        const {tingkat, jurusan, rombel} = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-4\" sticky=\"top\">\r\n                    <Navbar.Brand>\r\n                        <img className=\"mb-1 float-left\" src=\"/images/logosmk.png\" width=\"48\" height=\"45\" />\r\n                    </Navbar.Brand>\r\n                    <Nav activeKey=\"/absensi\">\r\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n                        <Nav.Link href=\"/datasiswa\">Data Siswa</Nav.Link>\r\n                        <Nav.Link href=\"/absensi\">Data Absensi</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={12}>\r\n                            <p className=\"text-center font-weight-bold mb-5\">Data Absensi Siswa</p>\r\n                            <Row>\r\n                                <Col lg={11}>\r\n                                    <Row>\r\n                                        <Col lg={2}>\r\n                                            <select id=\"tingkat\" value={this.state.tingkat} onChange={this.handleChangeSelect} className=\"form-control\">\r\n                                                <option value=\"\">Tingkat</option>\r\n                                                <option value=\"10\">10</option>\r\n                                                <option value=\"11\">11</option>\r\n                                                <option value=\"12\">12</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                        <Col lg={2}>\r\n                                            <select id=\"jurusan\" className=\"form-control\" value={this.state.jurusan} onChange={this.handleChangeSelect}>\r\n                                                <option value=\"\">Jurusan</option>\r\n                                                <option value=\"RPL\">RPL</option>\r\n                                                <option value=\"TKJ\">TKJ</option>\r\n                                                <option value=\"TEI\">TEI</option>\r\n                                                <option value=\"IOP\">IOP</option>\r\n                                                <option value=\"TEDK\">TEDK</option>\r\n                                                <option value=\"TPTU\">TPTU</option>\r\n                                                <option value=\"TOI\">TOI</option>\r\n                                                <option value=\"PFPT\">PFPT</option>\r\n                                                <option value=\"MEKA\">MEKA</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                        <Col lg={2}>\r\n                                            <select id=\"rombel\" className=\"form-control\" value={this.state.rombel} onChange={this.handleChangeSelect}>\r\n                                                <option value=\"\">Rombel</option>\r\n                                                <option value=\"A\">A</option>\r\n                                                <option value=\"B\">B</option>\r\n                                                <option value=\"C\">C</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                        <Col lg={2}>\r\n                                            <input id=\"dateStart\" type=\"date\" className=\"form-control\" value={this.state.dateStart}\r\n                                                onChange={this.handleChangeText} />\r\n                                        </Col>\r\n                                        <Col lg={2}>\r\n                                            <input id=\"dateEnd\" type=\"date\" className=\"form-control\" value={this.state.dateEnd}\r\n                                                 onChange={this.handleChangeText} />\r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={1}>\r\n                                            <Button variant=\"secondary\" onClick={this.handleCariKelas}>Cari</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={1}>\r\n                                    <Button onClick={() => this.exportFile(dataabsen)} variant=\"success\" className=\"float-right\">Rekap</Button>\r\n                                </Col>\r\n                            </Row> \r\n                            <Table striped bordered hover className=\"mt-5\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th>NIS</th>\r\n                                        <th>Kelas</th>\r\n                                        <th>Nama</th>\r\n                                        <th>Tanggal</th>\r\n                                        <th>Keterangan</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        dataabsen.length > 0 ? (\r\n                                            <Fragment>\r\n                                                {\r\n                                                    dataabsen.map((absen) => (\r\n                                                        absen.dataabs.kelas == tingkat+jurusan+rombel ? (\r\n                                                            <tr key={absen.id}>\r\n                                                            <td>{absen.dataabs.nis}</td>\r\n                                                            <td>{absen.dataabs.kelas}</td>\r\n                                                            <td>{absen.dataabs.nama}</td>\r\n                                                            <td>{absen.dataabs.waktu}</td>\r\n                                                            <td>{absen.dataabs.name}</td>\r\n                                                        </tr>\r\n                                                        ): null\r\n                                                        \r\n                                                    ))\r\n                                                }\r\n                                            </Fragment>\r\n                                        ) : null\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst reduxState = (state) => ({\r\n    dataabsen: state.dataabsen,\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    getAbsen: (data) => dispatch(getDataAbsen(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Absensi);","C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalEdit.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalHapus.js",[],"C:\\xampp\\htdocs\\react-sistem-absensi\\src\\components\\molecules\\ModalExport.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":32,"column":25,"nodeType":"98","endLine":32,"endColumn":109},{"ruleId":"96","severity":1,"message":"97","line":40,"column":25,"nodeType":"98","endLine":40,"endColumn":109},{"ruleId":"96","severity":1,"message":"97","line":48,"column":29,"nodeType":"98","endLine":48,"endColumn":89},{"ruleId":"99","severity":1,"message":"100","line":75,"column":49,"nodeType":"101","messageId":"102","endLine":75,"endColumn":51},{"ruleId":"99","severity":1,"message":"100","line":115,"column":49,"nodeType":"101","messageId":"102","endLine":115,"endColumn":51},{"ruleId":"99","severity":1,"message":"100","line":135,"column":49,"nodeType":"101","messageId":"102","endLine":135,"endColumn":51},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","replacedBy":"104"},{"ruleId":"92","severity":1,"message":"105","line":176,"column":26,"nodeType":"94","messageId":"95","endLine":176,"endColumn":34},{"ruleId":"96","severity":1,"message":"97","line":218,"column":25,"nodeType":"98","endLine":218,"endColumn":109},{"ruleId":"96","severity":1,"message":"97","line":82,"column":25,"nodeType":"98","endLine":82,"endColumn":109},{"ruleId":"106","severity":1,"message":"107","line":161,"column":77,"nodeType":"108","messageId":"109","endLine":161,"endColumn":79},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["110"],["111"],"'datauser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]